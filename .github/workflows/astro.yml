name: Deploy Astro site to ftp server

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "ftp"
  cancel-in-progress: false

env:
  BUILD_PATH: "." # default value when not using subfolders
  # BUILD_PATH: subfolder

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Setup Node
        uses: actions/setup-node@v3.6.0
        with:
          node-version: "18.16.0"
          
      - name: setup pnpm
        uses: pnpm/action-setup@v2.2.4
        with:
          version: 7.18.1
          run_install: false
          
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
          
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
            
      - name: install dependencies
        run: pnpm install
        
      - name: Build with Astro
        run: pnpm astro build
        working-directory: ${{ env.BUILD_PATH }}

  deploy:
    environment:
      name: production
    needs: build
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - name: FTP Deploy
        id: ftp
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.ftp_server }}
          username: ${{ secrets.ftp_username }}
          password: ${{ secrets.ftp_password }}
          port: 21
          protocol: ftp
          
          # Folder to upload from, must end with trailing slash /
          local-dir: ${{ env.BUILD_PATH }}/
          
          # Path to upload to on the server. Must end with trailing slash /
          server-dir: public_html/
          
          # Path and name of the state file - this file is used to track which files have been deployed
          #state-name: # optional
          # Prints which modifications will be made with current config options, but doesnt actually make any changes
          #dry-run: # optional
          # Deletes ALL contents of server-dir, even items in excluded with exclude argument
          #dangerous-clean-slate: # optional
          # An array of glob patterns, these files will not be included in the publish/delete process
          #exclude: # optional
          # How verbose should the information be - minimal, standard, or verbose
          #log-level: # optional
          # strict or loose
          #security: # optional
          # Timeout in milliseconds for FTP operations
          #timeout: # optional
